#!/bin/bash

CONFIG_FILE="$HOME/.config/sysconf/dotfiles.cfg"
INSTALL_QUEUE=""
CONFIG_QUEUE=""
TODO=""
BLUETOOTH=false



function main()
{
    echo ":: Enabling NetworkManager"
    sudo systemctl start NetworkManager
    sudo systemctl enable NetworkManager
    echo ":: Updating File Locations"
    sudo updatedb
}

function install()
{
    echo ":: Starting System Update"
    sudo apt install  $INSTALL_QUEUE
    echo ":: System Update Finished"
}

function addsshclients()
{
    read -p ':: Add additional ssh connections? [Y/n]' -r
    if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
        sshclient
        addsshclients
    fi
}

function vnc(){
    echo":: Configuring TigerVNC"
    vncserver
    vncserver -kill :1
    sudo loginctl enable-linger reinout
    systemctl --user enable vncserver@:1
    systemctl --user start vncserver@:1
}

function wol(){
    echo ":: Configuring WoL"
    #Todo
    #sudo systemctl enable wol@
    #sudo systemctl enable wol@
}

function config()
{
    echo ":: Installing Config Files"
    echo ":: Installing XResources"
    mkdir -p ~/.config/xresources/
    stow -t ~/ Xresources
  #  stow -t ~/ xprofile
    confenable Xresources 0
  #  confenable xprofile 0
    echo ":: Installing Vim"
    stow -t ~/ vim
    confenable vim 0
}

function audioclient()
{
    echo ":: NOTE: Due to mpd design, the actual audio client is run on the server, displaying it through ssh."
    echo ":: This purely sets the IP address for easy connection"
    sshclient mpd
}

function sshclient()
{
    mkdir ~/.ssh/sockets/ -p
    touch ~/.ssh/config
    read -p ":: What is the server's IP address? " IP
    if [ -z "$1" ]; then
        read -p ":: And how do you want to call the server? " NAME
    else
        NAME="$1"
    fi
    echo "Host $NAME" >> ~/.ssh/config
    echo "    HostName $IP " >> ~/.ssh/config
    echo "    Port 22" >> ~/.ssh/config
    echo "    ControlMaster auto" >> ~/.ssh/config
    echo "    ControlPersist yes" >> ~/.ssh/config
    echo "    ControlPath ~/.ssh/sockets/socket-%r@%h:%p" >> ~/.ssh/config
    echo "    AddressFamily inet" >> ~/.ssh/config
    echo ":: Updated ssh config file for easy server access under '$NAME'"
}



checkuser
checksudo
for i in "$@"; do
    case "$i" in
        "createuser")
            createuser
            ;;
        "restow")
            restow
            exit 0
            ;;
    esac
done

read -p ':: Do you want to install a minimal package list? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+=$(cat minpkglist.ubuntu)
    INSTALL_QUEUE+=" "
    CONFIG_QUEUE+="ssh "
else
    read -p ':: Do you want to install a complete package list? [Y/n]' -r
    if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
        INSTALL_QUEUE+=$(cat minpkglist.ubuntu)
        INSTALL_QUEUE+=" "
        INSTALL_QUEUE+=$(cat majpkglist.ubuntu)
        INSTALL_QUEUE+=" "
        CONFIG_QUEUE+="main ssh "
    fi
fi

read -p ':: Do you want to use this machine as a Deluge Server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="deluged deluge-web deluge-console "
    CONFIG_QUEUE+="delugeserver "
fi

read -p ':: Do you want to use this machine as a Syncthing server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    CONFIG_QUEUE+="syncthing "
fi

read -p ':: Do you want to install/update your configuration files? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    CONFIG_QUEUE+="config "
fi

read -p ':: Do you want to use this machine for passthrough? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="virt-manager qemu libvirt ovmf bridge-utils "
    CONFIG_QUEUE+="windowspassthrough "
fi

read -p ':: Do you want to use this machine as an Audio Server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="mpd mpg123 mpdscribble alsa-utils pulseaudio beets python-pip python3-pip ncmpcpp cuetools shntool gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly "
    CONFIG_QUEUE+="audioserver "
else
    read -p ':: Do you want to use this machine as an Audio Client instead? [Y/n]'  -r
    if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
        CONFIG_QUEUE+="audioclient "
    fi
fi

read -p ':: Do you want Bluetooth? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="blueman "
    CONFIG_QUEUE+="bluetooth "
    BLUETOOTH=true
fi

read -p ':: Should this device be able to stream audio to/from other devices? [Y/n]'  -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="pulseaudio-zeroconf avahi paprefs pavucontrol ttf-droid"
    CONFIG_QUEUE+="pulsetransceiver "
    if [ $BLUETOOTH == true ];then
        read -p ":: Do you also want Bluetooth streaming on this device? [Y/n]" -r
        if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
            INSTALL_QUEUE+="pulseaudio-alsa pulseaudio-bluetooth bluez bluez-libs bluez-utils bluez-firmware "
            CONFIG_QUEUE+="pulsebluetooth "
        fi
    fi
fi

read -p ':: Will this machine be connected to a pi-hole? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    CONFIG_QUEUE+="piholeclient "
fi

read -p ':: Do you want to install zsh as shell? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="zsh git-core "
    CONFIG_QUEUE+="zsh "
fi

read -p ':: Set up as VPN point? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    CONFIG_QUEUE+="installvpn "
fi

read -p ':: Using an SSD? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="util-linux "
    CONFIG_QUEUE+="ssd "
fi

read -p ':: Want to WoL? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
    INSTALL_QUEUE+="wol-systemd "
    CONFIG_QUEUE+="wol "
fi

install
configure
addsshclients
print 'Install script terminating'
echo "$TODO"
