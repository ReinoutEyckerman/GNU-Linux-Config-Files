#!/bin/bash

INSTALL_QUEUE=""
CONFIG_QUEUE=""
CUSTOM=false

. /etc/os-release
OS=$NAME
if [[ $OS == "Ubuntu" ]]; then
	SUFFIX="-u"
elif [[ $OS == "Arch" ]]; then
	SUFFIX="-a"
fi


for f in ./scripts/core/*; do source $f; done
. ./scripts/aur.sh

function install()
{
	if [[ $OS == "Ubuntu" ]]; then
		sudo apt install $INSTALL_QUEUE
	elif [[ $OS == "Arch" ]]; then
		aur
		sudo pacaur -S $INSTALL_QUEUE
	fi
}

function configure(){
	print "Starting Configuring"
	arr=($CONFIG_QUEUE)
	for config in ${arr[@]}; do
		echo "$config"
		eval ./scripts/"$config".sh
	done
	print "Finished Configuring"
}


checkuser
# Now go through all the options
options=($@)
for config in ${options[@]}; do
	CUSTOM=true
	case "$config" in
		--min)
		if [[ $OS == "Ubuntu" ]]; then
			sudo apt install $(cat minpkglist.ubuntu)
		elif [[ $OS == "Arch" ]]; then
			aur
			pacaur -S $(cat minpkglist)
		fi
		./scripts/ssh.sh $SUFFIX
		;;
		--full)
		if [[ $OS == "Ubuntu" ]]; then
			sudo apt install $(cat minpkglist.ubuntu)
			sudo apt install $(cat majpkglist.ubuntu)
		elif [[ $OS == "Arch" ]]; then
			aur
			paucaur -S $(cat minpkglist)
			paucaur -S $(cat majpkglist)
		fi
		./scripts/atom.sh $SUFFIX
		./scripts/etcher.sh $SUFFIX
		./scripts/ssh.sh $SUFFIX
		;;
		--airsonic) ./scripts/airsonic.sh $SUFFIX ;;
		--bluetooth) ./scripts/bluetooth.sh $SUFFIX ;;
		--deluge) ./scripts/deluge.sh $SUFFIX ;;
		--fstab) ./scripts/fstab.sh $SUFFIX ;;
		--mpd) ./scripts/mpd.sh $SUFFIX ;;
		--ncmpcpp) ./scripts/ncmpcpp.sh $SUFFIX ;;
		--ssd) ./scripts/ssd.sh $SUFFIX ;;
		--ssh) ./scripts/ssh.sh $SUFFIX ;;
		--syncthing) ./scripts/syncthing.sh $SUFFIX ;;
		--wlansleepfix) ./scripts/wlansleepfix.sh $SUFFIX ;;
		--wol) ./scripts/wol.sh $SUFFIX ;;
		--zsh) ./scripts/zsh.sh $SUFFIX ;;
		--config) config;;
		--createuser) createuser;;
		--restow) restow;;
		*) break;;
	esac
done
if [[ $CUSTOM == "true" ]]; then
	exit 0
fi

read -p ':: Do you want to install a minimal package list? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	if [[ $OS == "Ubuntu" ]]; then
		INSTALL_QUEUE+=$(cat minpkglist.ubuntu)
	elif [[ $OS == "Arch" ]]; then
		INSTALL_QUEUE+=$(cat minpkglist)
	fi
	INSTALL_QUEUE+=" "
	CONFIG_QUEUE+="ssh "
else
	read -p ':: Do you want to install a complete package list? [Y/n]' -r
	if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
		if [[ $OS == "Ubuntu" ]]; then
			INSTALL_QUEUE+=$(cat minpkglist.ubuntu)
			INSTALL_QUEUE+=" "
			INSTALL_QUEUE+=$(cat majpkglist.ubuntu)
		elif [[ $OS == "Arch" ]]; then
			INSTALL_QUEUE+=$(cat minpkglist)
			INSTALL_QUEUE+=" "
			INSTALL_QUEUE+=$(cat majpkglist)
		fi
		INSTALL_QUEUE+=" "
		CONFIG_QUEUE+="ssh atom etcher "
	fi
fi

read -p ':: Do you want to use this machine as an Airsonic Server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="airsonic "
fi

read -p ':: Do you want Bluetooth? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="bluetooth "
fi

read -p ':: Do you want to use this machine as a Deluge Server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="deluge "
fi

read -p ':: Do you want to add to your fstab? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="fstab "
fi

read -p ':: Do you want to use this machine as a MPD Server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="mpd "
fi
read -p ':: Do you want to use this machine as an ncmpcpp client? [Y/n]'  -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="ncmpcpp "
fi

read -p ':: Using an SSD? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="ssd "
fi

read -p ':: Do you want to use this machine as a Syncthing server? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="syncthing "
fi

read -p ':: Want to WoL? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="wol "
fi

read -p ':: Do you want to install zsh as shell? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="zsh "
fi

read -p ':: Do you want to install/update your configuration files? [Y/n]' -r
if [[ $REPLY =~ ^[Yy]$ ]] || [[ $REPLY == "" ]];then
	CONFIG_QUEUE+="config "
fi

install
configure
addsshclients
print 'Updating DB'
sudo updatedb
print 'Install script terminating'
finish
